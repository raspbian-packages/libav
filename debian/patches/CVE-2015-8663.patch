From: Michael Niedermayer <michael@niedermayer.cc>
Date: Sat, 28 Nov 2015 19:08:46 +0000 (+0100)
Subject: avcodec/utils: Clear dimensions in ff_get_buffer() on failure
X-Git-Tag: n3.0~1374
X-Git-Url: http://git.videolan.org/?p=ffmpeg.git;a=commitdiff_plain;h=abee0a1c60612e8638640a8a3738fffb65e16dbf

avcodec/utils: Clear dimensions in ff_get_buffer() on failure

Fixes out of array access
Fixes: 482d8f2fd17c9f532b586458a33f267c/asan_heap-oob_4a52b6_7417_1d08d477736d66cdadd833d146bb8bae.mov

Found-by: Mateusz "j00ru" Jurczyk and Gynvael Coldwind
Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

[sunweaver] - manually adapted for Debian jessie's libav version which lacks the get_internal_buffer() symbol.
---

###
### original patch from ffmpeg's Git repository:
### http://git.videolan.org/?p=ffmpeg.git;a=commitdiff_plain;h=abee0a1c60612e8638640a8a3738fffb65e16dbf
###
#diff --git a/libavcodec/utils.c b/libavcodec/utils.c
#index e018e445f4..d00dfae4ac 100644
#--- a/libavcodec/utils.c
#+++ b/libavcodec/utils.c
#@@ -888,8 +888,10 @@ end:
# int ff_get_buffer(AVCodecContext *avctx, AVFrame *frame, int flags)
# {
#     int ret = get_buffer_internal(avctx, frame, flags);
#-    if (ret < 0)
#+    if (ret < 0) {
#         av_log(avctx, AV_LOG_ERROR, "get_buffer() failed\n");
#+        frame->width = frame->height = 0;
#+    }
#     return ret;
# }
Index: libav-11.12-deb8u2/libavcodec/utils.c
===================================================================
--- libav-11.12-deb8u2.orig/libavcodec/utils.c
+++ libav-11.12-deb8u2/libavcodec/utils.c
@@ -617,6 +617,10 @@ int ff_get_buffer(AVCodecContext *avctx,
 
     switch (avctx->codec_type) {
     case AVMEDIA_TYPE_VIDEO:
+        if (av_image_check_size(avctx->width, avctx->height, 0, avctx) < 0) {
+            frame->width = frame->height = 0;
+            return AVERROR(EINVAL);
+        }
         if (frame->width <= 0 || frame->height <= 0) {
             frame->width  = FFMAX(avctx->width, avctx->coded_width);
             frame->height = FFMAX(avctx->height, avctx->coded_height);
@@ -634,9 +638,6 @@ int ff_get_buffer(AVCodecContext *avctx,
                    frame->sample_aspect_ratio.den);
             frame->sample_aspect_ratio = (AVRational){ 0, 1 };
         }
-
-        if ((ret = av_image_check_size(avctx->width, avctx->height, 0, avctx)) < 0)
-            return ret;
         break;
     case AVMEDIA_TYPE_AUDIO:
         if (!frame->sample_rate)
@@ -670,8 +671,11 @@ int ff_get_buffer(AVCodecContext *avctx,
     }
 
     ret = ff_decode_frame_props(avctx, frame);
-    if (ret < 0)
+    if (ret < 0) {
+        if (avctx->codec_type == AVMEDIA_TYPE_VIDEO)
+            frame->width = frame->height = 0;
         return ret;
+    }
 
     if (hwaccel && hwaccel->alloc_frame) {
         ret = hwaccel->alloc_frame(avctx, frame);
@@ -696,8 +700,11 @@ FF_DISABLE_DEPRECATION_WARNINGS
             frame->reference    = 1;
 
         ret = avctx->get_buffer(avctx, frame);
-        if (ret < 0)
+        if (ret < 0) {
+            if (avctx->codec_type == AVMEDIA_TYPE_VIDEO)
+                frame->width = frame->height = 0;
             return ret;
+        }
 
         /* return if the buffers are already set up
          * this would happen e.g. when a custom get_buffer() calls
@@ -789,6 +796,8 @@ fail:
         avctx->release_buffer(avctx, frame);
         av_freep(&priv);
         av_buffer_unref(&dummy_buf);
+        if (avctx->codec_type ==  AVMEDIA_TYPE_VIDEO)
+            frame->width = frame->height = 0;
         return ret;
     }
 FF_ENABLE_DEPRECATION_WARNINGS
@@ -802,6 +811,9 @@ end:
         frame->height = avctx->height;
     }
 
+    if ((ret < 0) && (avctx->codec_type ==  AVMEDIA_TYPE_VIDEO))
+        frame->width = frame->height = 0;
+
     return ret;
 }
 
